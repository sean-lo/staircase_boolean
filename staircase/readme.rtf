{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
The files are in pairs: \
staircase_resnet_tests\'92xxx\'92.py\
read_experiment_data\'92xxx\'92.py\
\
\'91xxx\'92 = null - runs the experiment with data derived from the uniform measure over the hypercube.\
\'91xxx\'92 = gauss - runs the experiment with Gaussian data.\
\'91xxx\'92 = multi - runs the experiment with uniform measure over the hypercube but with the double staircase\
\'91xxx\'92 = biased - runs the experiment with biased measure over the hypercube\
\
For `xxx\'92 = multi  there is no comparison with learning parity\
\

\f1\b General Instructions:
\f0\b0 \
1. running staircase_resnet_tests\'92xxx\'92.py trains the neural network and stores the weights in the folder trained_wts\
2. running read_experiment_data\'92xxx\'92.py plots the results. \
3. set parameters in functions 
\f2 \cf2 \cb3 train_stair5_net(), train_parity5_net(), eval_loss_and_coeffs_stair5(),eval_loss_and_coeffs_parity5().\

\f0 4. Set learning rate schedule in the function 
\f2 lr_sched()\

\f0 5. DO NOT delete the empty folder trained_wts
\f2 \

\f1\b \
Explanation of parameters:
\f0\b0 \
n = dimension of the space\
\
d = depth of the staircase/ parity (k in the manuscript)\
\
batch_size = mini batch size for SGD in train_yyy functions,\
\
batch_size = size of number of independent samples to evaluate loss/ fourier coefficients over tie in \
\
eval_loss_yyy functions.\
\
erm_num_samples = number of independent samples to learn from\
\
learning_rate = initial learning rate\
\
num_layers, layer_with = number of layers, width of the network respectively.\
\
refresh_save_rate = number of iterations when the program saves the network weights\
\
iter_range = the iterations of neural network to evaluate generalization error/ fourier coefficients\
\
When \'91xxx\'92 = multi, d_1 and d_2 are the two depths of the double staircase.\
\
When \'91xxx\'92 = biased, p is the probability that a given co-ordinate has value 1.\
\
Change the values of d, d_1, d_2, limits of number of iterations accordingly in read_experiment_data\'92xxx\'92.py when reading the data.
\f2 \
}